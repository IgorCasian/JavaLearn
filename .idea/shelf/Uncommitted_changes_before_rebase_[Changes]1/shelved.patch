Index: src/Lectia8/Task3/Date.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Lectia8/Task3/Date.java b/src/Lectia8/Task3/Date.java
new file mode 100644
--- /dev/null	(date 1728576734456)
+++ b/src/Lectia8/Task3/Date.java	(date 1728576734456)
@@ -0,0 +1,48 @@
+package Lectia8.Task3;
+
+public class Date {
+    private Integer zi;
+    private Integer luna;
+    private Integer anul;
+
+    public void setZi(Integer zi) {
+        if (zi>=1 && zi<=31){
+            this.zi = zi;
+        }
+        else {
+            throw new IllegalArgumentException("Ziua trebuie sa fie intre 1 si 31");
+        }
+    }
+
+    public void setLuna(Integer luna) {
+        if (luna>=1 && luna<=12) {
+            this.luna = luna;
+        }
+        else{
+            throw new IllegalArgumentException("Luna trebuie sa fie intre 1 si 12");
+        }
+    }
+
+    public void setAnul(Integer anul) {
+        if (anul>=1000) {
+            this.anul = anul;
+        }
+        else {
+            new IllegalArgumentException("Anul trebuie sa fiie mai mare ca 1000");
+        }
+        }
+
+    public Integer getZi() {
+        return zi;
+    }
+    public Integer getLuna() {
+        return luna;
+    }
+    public Integer getAnul() {
+        return anul;
+    }
+
+    public String displayDate(){
+        return (zi+"/"+luna+"/"+anul);
+    }
+}
Index: ../../Temp/Hello/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Temp/Hello/.gitignore b/../../Temp/Hello/.gitignore
new file mode 100644
--- /dev/null	(date 1728576734472)
+++ b/../../Temp/Hello/.gitignore	(date 1728576734472)
@@ -0,0 +1,29 @@
+### IntelliJ IDEA ###
+out/
+!**/src/main/**/out/
+!**/src/test/**/out/
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+bin/
+!**/src/main/**/bin/
+!**/src/test/**/bin/
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
Index: ../../Temp/Hello/Hello.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Temp/Hello/Hello.iml b/../../Temp/Hello/Hello.iml
new file mode 100644
--- /dev/null	(date 1728576734472)
+++ b/../../Temp/Hello/Hello.iml	(date 1728576734472)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: src/Lectia8/Task2/Invoice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Lectia8/Task2/Invoice.java b/src/Lectia8/Task2/Invoice.java
new file mode 100644
--- /dev/null	(date 1728576734472)
+++ b/src/Lectia8/Task2/Invoice.java	(date 1728576734472)
@@ -0,0 +1,49 @@
+package Lectia8.Task2;
+
+public class Invoice {
+    private String modelDispozitiv;
+    private String descriere;
+    private Integer cantitatea;
+    private double pretul;
+
+    public void setModelDispozitiv(String modelDispozitiv){
+        this.modelDispozitiv = modelDispozitiv;
+    }
+
+    public void setDescriere(String descriere){
+        this.descriere = descriere;
+    }
+
+    public void setCantitatea(Integer cantitatea){
+        if (cantitatea>0) {
+            this.cantitatea = cantitatea;
+            }
+        else this.cantitatea = 0;
+    }
+
+    public void setPretul(double pretul)
+    {
+        if (pretul>0) {
+            this.pretul = pretul;
+        }
+        else this.pretul = 0.0;
+    }
+
+    public String getModelDispozitiv() {
+        return modelDispozitiv;
+    }
+
+    public Integer getCantitatea() {
+        return cantitatea;
+    }
+
+    public double getPretul() {
+        return pretul;
+    }
+
+    public double getAmount(){
+        return (pretul*cantitatea);
+
+    }
+
+}
Index: ../../Temp/Hello/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Temp/Hello/.idea/.gitignore b/../../Temp/Hello/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1728576734489)
+++ b/../../Temp/Hello/.idea/.gitignore	(date 1728576734489)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: ../../Temp/Hello/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Temp/Hello/.idea/vcs.xml b/../../Temp/Hello/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1728576734503)
+++ b/../../Temp/Hello/.idea/vcs.xml	(date 1728576734503)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/../.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../../Temp/Hello/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Temp/Hello/.idea/misc.xml b/../../Temp/Hello/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1728576734472)
+++ b/../../Temp/Hello/.idea/misc.xml	(date 1728576734472)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: ../../Temp/Hello/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Temp/Hello/.idea/modules.xml b/../../Temp/Hello/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1728576734489)
+++ b/../../Temp/Hello/.idea/modules.xml	(date 1728576734489)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/Hello.iml" filepath="$PROJECT_DIR$/Hello.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: ../../Lectia1/Lectia1/src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Lectia1/Lectia1/src/Main.java b/../../Lectia1/Lectia1/src/Main.java
new file mode 100644
--- /dev/null	(date 1728576734503)
+++ b/../../Lectia1/Lectia1/src/Main.java	(date 1728576734503)
@@ -0,0 +1,19 @@
+import javax.print.DocFlavor;
+
+//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
+// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
+public class Main {
+    public static void main(String[] args) {
+        //TIP Press <shortcut actionId="ShowIntentionActions"/> with your caret at the highlighted text
+        // to see how IntelliJ IDEA suggests fixing it.
+        System.out.print("Hello and welcome!");
+        System.out.println("SKJHLKHLK");
+        for (int i = 1; i <= 10; i++) {
+            //TIP Press <shortcut actionId="Debug"/> to start debugging your code. We have set one <icon src="AllIcons.Debugger.Db_set_breakpoint"/> breakpoint
+            // for you, but you can always add more by pressing <shortcut actionId="ToggleLineBreakpoint"/>.
+            System.out.println("  i = " + i);
+            System.out.print("FDF");
+
+        }
+        }
+    }
Index: ../../Lectia1/Lectia1/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Lectia1/Lectia1/.gitignore b/../../Lectia1/Lectia1/.gitignore
new file mode 100644
--- /dev/null	(date 1728576734503)
+++ b/../../Lectia1/Lectia1/.gitignore	(date 1728576734503)
@@ -0,0 +1,29 @@
+### IntelliJ IDEA ###
+out/
+!**/src/main/**/out/
+!**/src/test/**/out/
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+bin/
+!**/src/main/**/bin/
+!**/src/test/**/bin/
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
Index: src/Lectia8/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Lectia8/Main.java b/src/Lectia8/Main.java
new file mode 100644
--- /dev/null	(date 1728576734521)
+++ b/src/Lectia8/Main.java	(date 1728576734521)
@@ -0,0 +1,92 @@
+package Lectia8;
+
+import Lectia8.Task1.Employee;
+import Lectia8.Task2.Invoice;
+import Lectia8.Task3.Date;
+
+import java.util.Scanner;
+
+public interface Main {
+    public static void main(String[] args) {
+
+        System.out.println("=========== Lectia 8. Task 1 ==============");
+        System.out.println("===========================================");
+        System.out.println(" Definiți o clasă cu denumirea Employee. Adăugați 3 membri: name, age și department de tip\n" +
+                "String, int și String. Marcați membrii cu modificatorul de acces private. Furnizați un constructor cu\n" +
+                "3 parametri și metode getter/setter pentru fiecare membru. Scopul exercițiului este să creați o\n" +
+                "clasă bine încapsulată..");
+        System.out.println("===========================================");
+
+        Employee  rsHuman = new Employee();
+        rsHuman.setHuman("Igor Casian",48,"Tehnologii Informationale");
+        rsHuman.getHuman();
+
+        System.out.println("===========================================");
+        System.out.println("=========== Lectia 8. Task 2 ==============");
+        System.out.println("===========================================");
+        System.out.println("Creați o clasă cu denumirea Invoice care ar reprezenta factura eliberată de un magazin la\n" +
+                "procurarea unui aparat electrocasnic. O factură trebuie să conțină următoarele informații:\n" +
+                "modelul dispozitivului (String), descrierea produsului (String), cantitatea de produse achiziționate\n" +
+                "(int) și prețul pentru un produs (double).\n" +
+                "Definiți un constructor care va inițializa atributele clasei Invoice. Adăugați metode setter și getter\n" +
+                "pentru fiecare atribut. Implementați o metodă cu denumirea getAmount care va calcula și\n" +
+                "întoarce suma facturei ca o valoare de tip double.\n" +
+                "Atunci când cantitatea produselor specificată, fie prin intermediul constructorului sau a metodei\n" +
+                "setter, nu reprezintă o valoare pozitivă, variabilei corespunzătoare automat îi se va atribui\n" +
+                "valoarea 0 (zero). Similar se va proceda și în cazul valorii pentru preț, dacă acesta nu reprezintă\n" +
+                "o valoarea pozitivă, variabilei îi va fi atribuită valoarea 0.0.\n" +
+                "Creați un obiect de tipul clasei Invoice. Inițializați atributele necesare și apelați metoda\n" +
+                "getAmount. Asigurați-vă că rezultatul returnat este corect.");
+        System.out.println("===========================================");
+
+        Invoice depInvoice = new Invoice();
+        depInvoice.setModelDispozitiv("Piva");
+        depInvoice.setDescriere("Foarte buna");
+        depInvoice.setCantitatea(10);
+        depInvoice.setPretul(18.50);
+
+        System.out.println("Invoice Nr 2 ");
+        System.out.println("Din 11.10.2024");
+        System.out.println("Model dispozitiv: " + depInvoice.getModelDispozitiv());
+        System.out.println("Cantitatea:" + depInvoice.getCantitatea());
+        System.out.println("Pret: " + depInvoice.getPretul());
+        System.out.println("Total spre achitare: " + depInvoice.getAmount());
+
+        System.out.println("===========================================");
+        System.out.println("=========== Lectia 8. Task 3 ==============");
+        System.out.println("===========================================");
+        System.out.println("Creați o clasă cu denumirea Date care va reprezenta o dată calendaristică. Clasa va conține 3\n" +
+                "atribute care vor stoca valoarea pentru zi, lună și an. Aplicați principiul de încapsulare asupra\n" +
+                "acestei clase. Fiecare metodă setter atunci când va fi apelată, trebuie să valideze corectitudinea\n" +
+                "valorii care urmează a fi atribuită variabilei, de ex. valoarea pentru lună trebuie să fie definită în\n" +
+                "intervalul 0-12.\n" +
+                "Adăugați o metodă cu denumirea displayDate care va afișa data calendaristică la ecran în\n" +
+                "formatul următor: zi/lună/an.\n" +
+                "Creați un obiect de tipul clasei Date. Utilizați metodele setter pentru a inițializa atributele clasei.\n" +
+                "Afișați data calendaristică la consolă.");
+        System.out.println("===========================================");
+
+       Date newDate = new Date();
+       newDate.setZi(3);
+       newDate.setLuna(6);
+       newDate.setAnul(1976);
+
+        System.out.println("Data in formatul zi/Luna/anul: " + newDate.displayDate());
+        Scanner inputZi = new Scanner(System.in);
+        Scanner inputLuna = new Scanner(System.in);
+        Scanner inputAnul = new Scanner(System.in);
+
+        System.out.println("Introducezi ziua: ");
+        newDate.setZi(inputZi.nextInt());
+        System.out.println("Introducezi Luna: ");
+        newDate.setLuna(inputLuna.nextInt());
+        System.out.println("Introducezi Anul: ");
+        newDate.setAnul(inputAnul.nextInt());
+
+
+        System.out.println("Ati intodus data (zi/Luna/anul): " + newDate.displayDate());
+
+
+
+    }
+}
Index: ../../Lectia1/Lectia1/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Lectia1/Lectia1/.idea/misc.xml b/../../Lectia1/Lectia1/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1728576734535)
+++ b/../../Lectia1/Lectia1/.idea/misc.xml	(date 1728576734535)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" project-jdk-name="23" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: src/Lectia7/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Lectia7/Main.java b/src/Lectia7/Main.java
new file mode 100644
--- /dev/null	(date 1728576734521)
+++ b/src/Lectia7/Main.java	(date 1728576734521)
@@ -0,0 +1,102 @@
+package Lectia7;
+
+import java.util.Random;
+
+public class Main {
+    public static void main(String[] args) {
+
+        System.out.println("=========== Lectia 7. Task 1 ==============");
+        System.out.println("===========================================");
+        System.out.println(" Declarați un array de tip int. Alocați memorie pentru acest array și inițializați-l cu diferite valori numerice.\n" +
+                "Afișați elementele array-ului la consolă.");
+        System.out.println("===========================================");
+        int[] arrayTask1 = new int[10];
+        Random  rand = new Random();  ;
+
+        for(int i=0;i<arrayTask1.length;i++) {
+            arrayTask1[i] = rand.nextInt(0, 100);
+            System.out.println(arrayTask1[i]);
+        }
+        System.out.println();
+        System.out.println("=========== Lectia 7. Task 2 ==============");
+        System.out.println("===========================================");
+        System.out.println(" Realizați un program Java care ar calcula suma și media elementelor unui array unidimensional și a unui\n" +
+                             "array bidimensional de tip int, numărul elementelor pare și impare.");
+        System.out.println("===========================================");
+        int NUMARELEMENTE = 10;
+        int[] arrayUni = new int[NUMARELEMENTE];
+        int[][] arrayBi = new int[NUMARELEMENTE][NUMARELEMENTE];
+        int sumaUni = 0;
+        int sumaBi = 0;
+
+        double mediaUni =0;
+        double mediaBi =0;
+
+        int numPar = 0;
+        int numarInpar = 0;
+
+        for(int i=0;i<arrayUni.length;i++) {
+            arrayUni[i] = rand.nextInt(0, 100);
+            sumaUni += arrayUni[i];
+            if (arrayUni[i]%2 == 0) {
+                numPar++;
+            }
+            else {
+                numarInpar++;
+            }
+        }
+        mediaUni=(double)sumaUni/NUMARELEMENTE;
+        System.out.println("Suma array unidimensional este: " +sumaUni);
+        System.out.println("Media array unidimensional este: " +mediaUni);
+        System.out.println("Numere pare: " +numPar);
+        System.out.println("numere inpare: " +numarInpar);
+
+        for(int i=0;i<arrayBi.length;i++) {
+            for(int l=0;i<NUMARELEMENTE;i++) {
+                arrayBi[i][l] = rand.nextInt(0, 100);
+                sumaBi+=arrayBi[i][l];
+                if (arrayBi[i][l]%2 == 0) {
+                    numPar++;
+                }
+                else {
+                    numarInpar++;
+                }
+
+            }
+        }
+        mediaBi=(double)sumaBi/(NUMARELEMENTE*NUMARELEMENTE);
+        System.out.println("Suma array Bidiminsional este: " +sumaBi);
+        System.out.println("Media array Bidiminsional este: " +mediaBi);
+        System.out.println("Numere pare: " +numPar);
+        System.out.println("numere inpare: " +numarInpar);
+
+        System.out.println();
+        System.out.println("=========== Lectia 7. Task 3 ==============");
+        System.out.println("===========================================");
+        System.out.println(" Realizați un program Java pentru a copia elementele unui array într-un alt array.");
+        System.out.println("===========================================");
+
+        int[] arrayPrimar = new int[NUMARELEMENTE];
+        int[] arrayCopy = new int[NUMARELEMENTE];
+
+        //initializarea array
+
+        for(int i=0;i<arrayPrimar.length;i++) {
+            arrayPrimar[i] = rand.nextInt(0, 100);
+            System.out.println(arrayPrimar[i]);
+        }
+        System.out.println("===========");
+       //prima metoda fiecare elemen
+//        for ( int i=0;i<arrayPrimar.length;i++) {
+//            arrayCopy[i] = arrayPrimar[i];
+//            System.out.println(arrayCopy[i]);
+//        }
+        arrayCopy = arrayPrimar;
+
+        for ( int i=0;i<arrayCopy.length;i++) {
+            System.out.println(arrayCopy[i]);
+        }
+
+
+    }
+}
Index: ../../Lectia1/Lectia1/Lectia1.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Lectia1/Lectia1/Lectia1.iml b/../../Lectia1/Lectia1/Lectia1.iml
new file mode 100644
--- /dev/null	(date 1728576734521)
+++ b/../../Lectia1/Lectia1/Lectia1.iml	(date 1728576734521)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../../Lectia1/Lectia1/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Lectia1/Lectia1/.idea/.gitignore b/../../Lectia1/Lectia1/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1728576734535)
+++ b/../../Lectia1/Lectia1/.idea/.gitignore	(date 1728576734535)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: ../../Temp/Hello/.idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Temp/Hello/.idea/uiDesigner.xml b/../../Temp/Hello/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1728576734535)
+++ b/../../Temp/Hello/.idea/uiDesigner.xml	(date 1728576734535)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: ../../Lectia1/Lectia1/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Lectia1/Lectia1/.idea/modules.xml b/../../Lectia1/Lectia1/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1728576734535)
+++ b/../../Lectia1/Lectia1/.idea/modules.xml	(date 1728576734535)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/Lectia1.iml" filepath="$PROJECT_DIR$/Lectia1.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: src/Lectia8/Task1/Employee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Lectia8/Task1/Employee.java b/src/Lectia8/Task1/Employee.java
new file mode 100644
--- /dev/null	(date 1728576734550)
+++ b/src/Lectia8/Task1/Employee.java	(date 1728576734550)
@@ -0,0 +1,19 @@
+package Lectia8.Task1;
+
+public class Employee {
+
+    private String name;
+    private Integer age;
+    private String department;
+
+    public void setHuman(String name,Integer age,String department) {
+        this.name =  name;
+        this.age = age;
+        this.department = department;
+    }
+
+    public void getHuman() {
+        System.out.println("Name:" +name+" Age:"+age+" Department:" + department );
+    }
+
+}
Index: ../../Lectia1/Lectia1/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Lectia1/Lectia1/.idea/vcs.xml b/../../Lectia1/Lectia1/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1728576734550)
+++ b/../../Lectia1/Lectia1/.idea/vcs.xml	(date 1728576734550)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/../.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
